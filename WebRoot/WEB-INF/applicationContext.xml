<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:component-scan base-package="com.weichat" />
	<!-- 支持aop注解 -->
	<aop:aspectj-autoproxy />
	<context:property-placeholder location="classpath:/hibernate.properties" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${dataSource.driverClassName}" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${dataSource.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${dataSource.hbm2ddl.auto}</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.weichat.model</value><!-- 扫描实体类，也就是平时所说的model -->
			</list>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.weichat.model.User</value>
				<value>com.weichat.model.Anquanshengchan</value>
				<value>com.weichat.model.Dangtuanjianshe</value>
				<value>com.weichat.model.Guotu</value>
				<value>com.weichat.model.Infomation</value>
				<value>com.weichat.model.Jiansejindu</value>
				<value>com.weichat.model.Productpeoper</value>
				<value>com.weichat.model.Project</value>
				<value>com.weichat.model.Prolist</value>
				<value>com.weichat.model.Qiyefazhan</value>
				<value>com.weichat.model.Qiyefuwu</value>
				<value>com.weichat.model.Xiangqing</value>
				<value>com.weichat.model.Yaosu</value>
				<value>com.weichat.model.Youhuizhengce</value>
				<value>com.weichat.model.Zhengwuqingkuang</value>
			</list>
		</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置事务管理 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
	<aop:config>
		<aop:pointcut expression="execution(public * com.weichat.service.impl.*.*(..))"
			id="businessService" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="businessService" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED" />
			<!-- get开头的方法不需要在事务中运行 。 有些情况是没有必要使用事务的，比如获取数据。开启事务本身对性能是有一定的影响的 -->
			<tx:method name="*" />    <!-- 其他方法在实务中运行 -->
		</tx:attributes>
	</tx:advice>
	
	 <!-- 配置调度器工厂(SchedulerFactoryBean) -->  
    <bean name="startQuertz"  
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list>  
                <ref bean="myJobTrigger" />  
            </list>  
        </property>  
    </bean>  
    
    <!-- 配置Cron触发器(CronTriggerFactoryBean) -->  
    <bean id="myJobTrigger"  
        class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail">  
            <ref bean="myJobDetail" />  
        </property>  
        <property name="cronExpression">  
            <!-- 每隔一秒钟执行一次 -->  
			            <value>0/60 * * * * ?</value>   
			<!--每隔两小时同步一次用户信息  -->
<!-- 			<value>0 0 */2 * * ? </value> -->
        </property>  
    </bean>  
    
     <!-- 配置方法调用任务工厂(XXXJobDetailFactoryBean) -->  
    <bean id="myJobDetail"  
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject">  
            <ref bean="myJob" />  
        </property>  
        <property name="targetMethod">  
            <value>findEmployeeList</value>  
        </property>  
    </bean>  
  
    <!-- 配置自定义的时间任务(Job) -->  
    <bean id="myJob" class="com.weichat.web.MyJob" />  
	
</beans>